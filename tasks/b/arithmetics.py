"""
Вам даны три переменные x, y и z, в которые записаны два случайных целых и
одно случайное вещественное число, соответственно.

В этом задании вам запрещено заводить новые переменные и подключать модули.

Выведите по очереди:
- сами три числа через пробел
    > уже написано за вас
- [a] их сумму
- [b] их произведение
- [c] округленное вверх до целого произведение x и z
- [d] частное x и z
- [e] неполное частное при делении x на z
- [f] остаток от деления x на y
- [g] y в степени z
- [h] куб произведения трех их попарных сумм
- [i] число z с ровно пятью знаками после точки
    > подсказка: используйте форматную строку (f-string)

Запишите в переменную FLOATS, сколько среди пунктов [a]-[h] нецелых результатов
в смысле type(результата) == float.
"""

def out(x, y, z):
    print("x = " + str(x))
    print("y = " + str(y))
    print("z = " + str(z))


from test.common.context import get_integer, get_float  # не обращайте внимание

x = get_integer()
y = get_integer()
z = get_float()
FLOATS = 0
#   out(x, y, z)


print(x, y, z)  # вывести три числа через пробел
print(x + y + z)
if isinstance(x + y + z, float):
    FLOATS += 1
print(x * y * z)
if isinstance(x * y * z, float):
    FLOATS += 1
print(int(x * z) + 1)
print(x / z)
if isinstance(x / z, float):
    FLOATS += 1
print(int(x / z))
print(x % y)
if isinstance(x % y, float):
    FLOATS += 1
print(y**z)
if isinstance(y**z, float):
    FLOATS += 1
print(((x + y) * (y + z) * (x + z))**3)
if isinstance(((x + y) * (y + z) * (x + z))**3, float):
    FLOATS += 1
print(int(z * 10**5) / 10**5)
if isinstance(int(z * 10**5) / 10**5, float):
    FLOATS += 1
#print("FLOAT = " + str(FLOATS))















































# Вам даны три переменные x, y и z, в которые записаны два случайных целых и
# одно случайное вещественное число, соответственно.
#
# В этом задании вам запрещено заводить новые переменные и подключать модули.
#
# Выведите по очереди:
# - сами три числа через пробел
#     > уже написано за вас
# - [a] их сумму
# - [b] их произведение
# - [c] округленное вверх до целого произведение x и z
# - [d] частное x и z
# - [e] неполное частное при делении x на z
# - [f] остаток от деления x на y
# - [g] y в степени z
# - [h] куб произведения трех их попарных сумм
# - [i] число z с ровно пятью знаками после точки
#     > подсказка: используйте форматную строку (f-string)
#
# Запишите в переменную FLOATS, сколько среди пунктов [a]-[h] нецелых результатов
# в смысле type(результата) == float.
# """
#
# def out(x, y, z):
#     print("x = " + str(x))
#     print("y = " + str(y))
#     print("z = " + str(z))
#
#
# from test.common.context import get_integer, get_float  # не обращайте внимание
#
# x = get_integer()
# y = get_integer()
# z = get_float()
#
# out(x, y, z)
#
#
# print(x, y, z)  # вывести три числа через пробел
# print(x + y + z)
# print(x * y * z)
# print(int(x * z) + 1)
# print(int(x / z))
# print(x % y)
# print(y**z)
# print((x + y) * (y + z) * (x + z))
# print()
# #out(x, y, z)
# print(int(z * 10**5) / 10**5)
#
#
# # Место для вашего кода
#
# #FLOATS = ...
# Вам даны три переменные x, y и z, в которые записаны два случайных целых и
# одно случайное вещественное число, соответственно.
#
# В этом задании вам запрещено заводить новые переменные и подключать модули.
#
# Выведите по очереди:
# - сами три числа через пробел
#     > уже написано за вас
# - [a] их сумму
# - [b] их произведение
# - [c] округленное вверх до целого произведение x и z
# - [d] частное x и z
# - [e] неполное частное при делении x на z
# - [f] остаток от деления x на y
# - [g] y в степени z
# - [h] куб произведения трех их попарных сумм
# - [i] число z с ровно пятью знаками после точки
#     > подсказка: используйте форматную строку (f-string)
#
# Запишите в переменную FLOATS, сколько среди пунктов [a]-[h] нецелых результатов
# в смысле type(результата) == float.
# """
#
# from test.common.context import get_integer, get_float  # не обращайте внимание
#
# x = get_integer()
# y = get_integer()
# z = get_float()
#
# print(x, y, z)  # вывести три числа через пробел
#
# # Место для вашего кода
#
# FLOATS =